name: Build and Release
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: build
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Tailwind
        run: |
          npm i
          npx tailwindcss -i ./static/css/input.css -o ./static/css/output.css
      - name: Pip install
        run: pip install -r requirements.txt
      - name: Actually build
        run: python setup.py build
      - name: Package Linux
        run: |
          cd build
          tar cvfz systems_design.tar.gz *linux*
        if: matrix.os == 'ubuntu-latest'
      - name: Upload Linux
        uses: actions/upload-artifact@v3
        with:
          name: systems_design.tar.gz
          path: build/systems_design.tar.gz
        if: matrix.os == 'ubuntu-latest'
      - name: Package Windows
        run: |
          cd build
          Compress-Archive -Path .\exe.win-amd64-3.10 -DestinationPath .\systems_design.zip
        if: matrix.os == 'windows-latest'
      - name: Upload Windows
        uses: actions/upload-artifact@v3
        with:
          name: systems_design.zip
          path: build/systems_design.zip
        if: matrix.os == 'windows-latest'
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Files
        uses: actions/download-artifact@v3
      - name: Make Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            systems_design.tar.gz
            systems_design.zip
  clean:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: sys*
    
    
    
